pipeline {
agent {
       node {
         label "MAVEN"
            }      
      }
environment{
PATH = "$PATH:/opt/mvn/apache-maven"    
}
stages {
        stage('Get Code From GitHub') {                                                
            steps {
                echo '<--------------- Getting Code From GitHub--------------->'
              
			    git branch: 'main', credentialsId: '57c0ce68-28eb-4a5b-8ea5-bdabab415bb8', url: 'https://github.com/prassurohith/TaxiBooking.git'
			    
                echo '<------------- Getting Code From GitHub completed --------------->'
                  }
                                       }
stage('Build & Compile Source Code') {
            steps {
                echo '<--------------- Build & Compile Source Code --------------->'
              
			     sh  'mvn clean install'
			    
                echo '<--------------- Build & Compile Source Code Completed --------------->'
                  }
                                       }	
stage('SonarQube Analysis'){                                                                      
            steps{
                echo '<--------------- Static Code Analysis with SonarQube --------------->'
                 script{
			      withSonarQubeEnv(credentialsId: 'SonarQubeCreds')  {
                  sh 'mvn clean package  sonar:sonar'
                         }                                          
				                                                            }
                echo '<--------------- Static Code Analysis with SonarQube Completed--------------->'
                  }
                                       }

stage('Sonar Quality Gate '){                                                                      
            steps{
                echo '<--------------- Quality Gate Analysis with SonarQube --------------->'
                 script{
			     "waitForQualityGate abortPipeline: false, credentialsId: 'SonarQubeCreds'"
                         }                                          
				                                                            
                echo '<--------------- Quality Gate Analysis with SonarQube Completed--------------->'
                  }
                                       }	
stage('Upload Artifact to Artifact Repository'){                                                                      
            steps{
                echo '<---------------Upload Artifact to Artifact Repository Started --------------->'
                 script{
				 
                 nexusArtifactUploader artifacts: [[artifactId: 'TaxiBooking', classifier: '', file: 'target/TaxiBooking.war', type: 'war']], credentialsId: 'Nexus Artifactory', groupId: 'com.example.maven-project', nexusUrl: '10.0.1.14:8081', nexusVersion: 'nexus3', protocol: 'http', repository: 'My_Maven_Release_Hosted_Repository', version: "1.0"

                       }                                          
				                                                            
                echo '<--------------- Upload Artifact to Artifact Repository  Completed--------------->'
                  }
                                       }		

stage('Docker Image Build'){                                                                      
            steps{
                echo '<---------------Docker Image Build  Started --------------->'
                 script{
				    sh 'docker rmi  docker rmi -f $(docker images -aq)'
				    sh 'docker image build -t $JOB_NAME:v1.$BUILD_ID .'
				    sh 'docker image tag $JOB_NAME:v1.$BUILD_ID  prassurohith9999/$JOB_NAME:v1.$BUILD_ID'
			        sh 'docker image tag $JOB_NAME:v1.$BUILD_ID  prassurohith9999/$JOB_NAME:latest'
                       }                                          
				                                                            
                echo '<---------------Docker Image Build  Completed--------------->'
                  }
                                       }	

stage('Push Docker Image To Docker Hub'){                                                                      
            steps{
                echo '<---------------Push Docker Image To Docker Hub  Started --------------->'
                 script{
	     
                 sh 'docker login -u prassurohith9999 -p Bhagyaraj@1993'
		         sh 'docker image push prassurohith9999/$JOB_NAME:v1.$BUILD_ID'
		         sh 'docker image push  prassurohith9999/$JOB_NAME:latest'
				 sh 'docker rmi  docker rmi -f $(docker images -aq)'
		         
                                                               
		}		                                                            
                echo '<---------------Push Docker Image To Docker Hub  Completed--------------->'
				
                  }
                                       }									   
stage('Push Docker Image To Docker Hub'){                                                                      
            steps{
                echo '<---------------Deploy Docker Container on Deployment Server  Started--------------->'
                 script{
	     withCredentials([usernameColonPassword(credentialsId: 'DeploymentHost', variable: 'TomcatDeploymentSerever')]) {
    

                 sh 'docker login -u prassurohith9999 -p Bhagyaraj@1993'   
				 sh 'docker run -it  -p  8080:8888  prassurohith9999/taxibooking:latest'
                                                                                                                         			 
		}		                                                            
                echo '<---------------Deploy Docker Container on Deployment Server  Completed--------------->'
                       }
                                        }
										
        }
}
